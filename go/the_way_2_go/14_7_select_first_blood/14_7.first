// 14.7 a and b

package main

import (
    "fmt"
    "time"
)

func main() {
    printer(tel())                              // it is infinite counter here!
}

// number producer; returns READ ONLY channel (where `chan<- int' is WRITE ONLY idiom)
func tel() <-chan int {
    ch := make(chan int)

    go func() {
        for i := 0; ;i++ {
            ch <- i
        }
    }()

    return ch
}

// printer function, this is consumer; no need to use bidirectional buffer
func printer(ch <-chan int) {
    for {
        time.Sleep(1e9)
        fmt.Println(<-ch)
    }
}
